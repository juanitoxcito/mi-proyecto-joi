name: Build Kivy Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker container
      id: docker_container
      run: |
        docker run -d --name p4a_builder -v "$(pwd):/home/user/app" -w "/home/user/app" kivy/python-for-android sleep infinity
        echo "container_id=$(docker ps -aqf "name=p4a_builder")" >> $GITHUB_OUTPUT

    - name: Configure and build APK
      env:
        FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        docker exec --user root ${{ steps.docker_container.outputs.container_id }} bash -c "
          export HOME=/home/user
          
          # Instala Buildozer y sus dependencias de forma global
          pip install buildozer cython==0.29.36 networkx google-generativeai firebase-admin &&
          
          # Exporta las variables de entorno necesarias para que Buildozer funcione correctamente
          export BUILDOZER_ALLOW_ROOT=1 &&
          export PATH=\$PATH:\$HOME/.local/bin &&

          # Crea el archivo buildozer.spec si no existe. La opción --no-console es clave
          # para entornos no interactivos.
          if [ ! -f 'buildozer.spec' ]; then
            buildozer init --no-console
          fi
          
          # Modifica los parámetros clave en el archivo buildozer.spec
          sed -i 's/^#*requirements = .*$/requirements = python3,kivy,plyer,networkx,google-generativeai,firebase-admin/' buildozer.spec &&
          sed -i 's/^#*android.api = .*$/android.api = 33/' buildozer.spec &&
          sed -i 's/^#*android.build_tools = .*$/android.build_tools = 33.0.0/' buildozer.spec &&
          sed -i 's/^#*android.ndk = .*$/android.ndk = 25b/' buildozer.spec &&
          sed -i 's/^#*p4a.python_version = .*$/p4a.python_version = 3/' buildozer.spec &&

          # Compila la aplicación para Android
          buildozer android debug --clean
        "
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: joi-android-apk
        path: bin/*.apk

    - name: Clean up Docker container
      if: always()
      run: docker stop ${{ steps.docker_container.outputs.container_id }}
