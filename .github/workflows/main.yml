name: Build Kivy Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Android APK using Docker
      env:
        # Pasa tus secretos a Docker de forma segura
        FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        # Este comando inicia una máquina virtual Docker que ya tiene todas las herramientas de Kivy instaladas.
        docker run --rm \
          -v "$(pwd):/home/user/app" \
          -w "/home/user/app" \
          --env-file <(env | grep -E '^(FIREBASE_SERVICE_ACCOUNT_JSON|GEMINI_API_KEY)') \
          kivy/python-for-android \
          bash -c " \
            # Instala Buildozer y sus dependencias
            pip install buildozer cython==0.29.36 && \
            # Inicia buildozer con las configuraciones correctas
            yes | buildozer init --ignore-root && \
            sed -i 's/^#*requirements = .*$/requirements = python3,kivy,plyer,networkx,google-generativeai,firebase-admin/' buildozer.spec && \
            sed -i 's/^#*android.api = .*$/android.api = 33/' buildozer.spec && \
            sed -i 's/^#*android.build_tools = .*$/android.build_tools = 33.0.0/' buildozer.spec && \
            sed -i 's/^#*android.ndk = .*$/android.ndk = 25b/' buildozer.spec && \
            # Compila la aplicación
            buildozer android debug --clean \
          "

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: joi-android-apk
        path: bin/*.apk
