name: Build Kivy Android APK

on:
  push:
    branches:
      - main # Este flujo de trabajo se activará cada vez que haya un 'push' a la rama 'main'

jobs:
  build:
    runs-on: ubuntu-latest # Usamos un entorno Linux actualizado

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Descarga tu código del repositorio

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Usamos Python 3.10, que es compatible con Kivy y Buildozer

    - name: Install Buildozer and Kivy dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
            openjdk-11-jdk \
            build-essential \
            libffi-dev \
            git \
            zip \
            unzip \
            ant \
            python3-pip \
            python3-dev \
            cython3 \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            libtool \
            pkg-config \
            autoconf \
            libtool-bin \
            m4 \
            autotools-dev
        pip install --upgrade pip
        pip install cython==0.29.36 pyjnius==1.4.2
        # ¡IMPORTANTE! Hemos añadido versiones específicas para httpx e idna para resolver el error 'resolution-too-deep'
        pip install kivy kivymd python-for-android buildozer plyer firebase-admin google-generativeai httpx==0.28.1 idna==3.6

    - name: Configure JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV

    - name: Clean Buildozer cache
      run: |
        buildozer android clean

    - name: Initialize Buildozer and modify spec file
      run: |
        buildozer init
        # Modificar buildozer.spec usando sed para asegurar los valores correctos
        # Primero, reemplazamos el valor si la línea está comentada o no
        sed -i 's/^#*title = .*$/title = JoiApp/' buildozer.spec
        sed -i 's/^#*package.name = .*$/package.name = joi/' buildozer.spec
        sed -i 's/^#*package.domain = .*$/package.domain = org.joi/' buildozer.spec
        sed -i 's/^#*android.api = .*$/android.api = 33/' buildozer.spec
        sed -i 's/^#*android.minapi = .*$/android.minapi = 24/' buildozer.spec
        sed -i 's/^#*requirements = .*$/requirements = python3,kivy,kivymd,firebase-admin,google-generativeai,requests,pytz,plyer/' buildozer.spec
        sed -i 's/^#*android.ndk = .*$/android.ndk = 25b/' buildozer.spec
        sed -i 's/^#*android.archs = .*$/android.archs = arm64-v8a,armeabi-v7a/' buildozer.spec
        # Luego, nos aseguramos de que las líneas no estén comentadas (quitamos el # inicial si existe)
        sed -i 's/^#title =/title =/' buildozer.spec
        sed -i 's/^#package.name =/package.name =/' buildozer.spec
        sed -i 's/^#package.domain =/package.domain =/' buildozer.spec
        sed -i 's/^#android.api =/android.api =/' buildozer.spec
        sed -i 's/^#android.minapi =/android.minapi =/' buildozer.spec
        sed -i 's/^#requirements =/requirements =/' buildozer.spec
        sed -i 's/^#android.ndk =/android.ndk =/' buildozer.spec
        sed -i 's/^#android.archs =/android.archs =/' buildozer.spec

    - name: Build Android APK
      run: |
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: joi-android-apk
        path: bin/*.apk # Sube el archivo .apk generado por Buildozer
