name: Build Kivy Android APK

on:
  push:
    branches:
      - main # Este flujo de trabajo se activará cada vez que haya un 'push' a la rama 'main'

jobs:
  build:
    runs-on: ubuntu-latest # Usamos un entorno Linux actualizado

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Descarga tu código del repositorio

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Usamos Python 3.10, que es compatible con Kivy y Buildozer

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # Distribución de Java
        java-version: '17' # Versión de Java

    - name: Download and setup Android Command-Line Tools and SDK Components
      run: |
        ANDROID_SDK_ROOT_PATH="/usr/local/lib/android/sdk"
        mkdir -p "$ANDROID_SDK_ROOT_PATH"
        
        # Descargar la última versión de las herramientas de línea de comandos (cmdline-tools)
        CMDLINE_TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip"
        CMDLINE_TOOLS_INSTALL_DIR="$ANDROID_SDK_ROOT_PATH/cmdline-tools"
        
        mkdir -p "$CMDLINE_TOOLS_INSTALL_DIR"
        
        wget -q "$CMDLINE_TOOLS_URL" -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d "$CMDLINE_TOOLS_INSTALL_DIR"
        
        # Limpiar la carpeta 'latest' antes de mover los archivos
        rm -rf "$CMDLINE_TOOLS_INSTALL_DIR/latest"
        mkdir -p "$CMDLINE_TOOLS_INSTALL_DIR/latest"
        
        # Mover el contenido descomprimido a la carpeta 'latest'
        mv "$CMDLINE_TOOLS_INSTALL_DIR"/cmdline-tools/* "$CMDLINE_TOOLS_INSTALL_DIR"/latest/
        
        # Eliminar la carpeta 'cmdline-tools' redundante que quedó después de mover su contenido
        rm -rf "$CMDLINE_TOOLS_INSTALL_DIR/cmdline-tools"
        
        # Configurar ANDROID_SDK_ROOT y añadir sdkmanager al PATH para el paso actual
        export ANDROID_SDK_ROOT="$ANDROID_SDK_ROOT_PATH"
        export PATH="$PATH:$ANDROID_SDK_ROOT_PATH/cmdline-tools/latest/bin"
        
        # ¡NUEVO! Crear un enlace simbólico para sdkmanager en la ubicación antigua esperada por Buildozer
        mkdir -p "$ANDROID_SDK_ROOT_PATH/tools/bin"
        ln -s "$ANDROID_SDK_ROOT_PATH/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_SDK_ROOT_PATH/tools/bin/sdkmanager"
        
        # Instalar platform-tools, build-tools;33.0.0 y platforms;android-33
        yes | sdkmanager "platform-tools" "build-tools;33.0.0" "platforms;android-33"
        # Aceptar licencias (esto es crucial y el 'yes |' lo automatiza)
        yes | sdkmanager --licenses

    - name: Install Buildozer and Kivy dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
            build-essential \
            libffi-dev \
            git \
            zip \
            unzip \
            ant \
            python3-pip \
            python3-dev \
            cython3 \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            libtool \
            pkg-config \
            autoconf \
            libtool-bin \
            m4 \
            automake \
            autotools-dev
        pip install --upgrade pip
        pip install cython==0.29.36 pyjnius==1.4.2
        # ¡IMPORTANTES! Versiones específicas para httpx, idna, charset_normalizer Y requests
        pip install kivy kivymd python-for-android buildozer plyer firebase-admin google-generativeai httpx==0.28.1 idna==3.6 charset_normalizer==3.3.2 requests==2.31.0

    - name: Clean .buildozer directory
      run: |
        rm -rf .buildozer
        echo ".buildozer directory eliminado para asegurar un inicio limpio."

    - name: Clean buildozer.spec if it exists
      run: |
        if [ -f buildozer.spec ]; then
          rm buildozer.spec
          echo "buildozer.spec eliminado para asegurar un inicio limpio."
        fi

    - name: Initialize Buildozer
      run: buildozer init

    # Pasos individuales para modificar el buildozer.spec
    - name: Modify buildozer.spec - Title
      run: |
        sed -i 's/^#*title = .*$/title = JoiApp/' buildozer.spec

    - name: Modify buildozer.spec - Package Name
      run: |
        sed -i 's/^#*package.name = .*$/package.name = joi/' buildozer.spec

    - name: Modify buildozer.spec - Package Domain
      run: |
        sed -i 's/^#*package.domain = .*$/package.domain = org.joi/' buildozer.spec

    - name: Modify buildozer.spec - Android API
      run: |
        sed -i 's/^#*android.api = .*$/android.api = 33/' buildozer.spec

    - name: Modify buildozer.spec - Android Min API
      run: |
        sed -i 's/^#*android.minapi = .*$/android.minapi = 24/' buildozer.spec

    - name: Modify buildozer.spec - Requirements
      run: |
        sed -i 's/^#*requirements = .*$/requirements = python3,kivy,kivymd,firebase-admin,google-generativeai,requests,pytz,plyer/' buildozer.spec

    - name: Modify buildozer.spec - Android NDK
      run: |
        sed -i 's/^#*android.ndk = .*$/android.ndk = 25b/' buildozer.spec
    
    - name: Modify buildozer.spec - Android Architectures
      run: |
        sed -i 's/^#*android.archs = .*$/android.archs = arm64-v8a,armeabi-v7a/' buildozer.spec

    - name: Modify buildozer.spec - Log Level
      run: |
        sed -i 's/^#*log_level = .*$/log_level = 2/' buildozer.spec

    - name: Modify buildozer.spec - Accept SDK License
      run: |
        sed -i '/^#*android.accept_sdk_license =/c\android.accept_sdk_license = True' buildozer.spec
    
    - name: Modify buildozer.spec - Android Build Tools Version
      run: |
        sed -i '/^#*android.build_tools =/c\android.build_tools = 33.0.0' buildozer.spec

    # Eliminamos android.sdk_path y android.ndk_path de buildozer.spec
    # para que Buildozer use las rutas por defecto o las variables de entorno.
    # La acción ya se encarga de configurar el PATH.

    - name: Update Python for Android toolchain
      run: |
        buildozer android update

    - name: Clean Buildozer build artifacts
      run: |
        buildozer android clean

    - name: Build Android APK
      run: |
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: joi-android-apk
        path: bin/*.apk # Sube el archivo .apk generado por Buildozer
