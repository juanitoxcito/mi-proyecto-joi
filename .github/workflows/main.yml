name: Build Kivy Android APK

on:
  push:
    branches:
      - main # Este flujo de trabajo se activará cada vez que haya un 'push' a la rama 'main'

jobs:
  build:
    runs-on: ubuntu-latest # Usamos un runner de Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Descarga tu código del repositorio

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Usamos Python 3.10

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        # Instalamos solo las dependencias de Python que no son parte de Kivy/Buildozer base
        pip install pyjnius==1.4.2 firebase-admin google-generativeai httpx==0.28.1 idna==3.6 charset_normalizer==3.3.2 requests==2.31.0 pytz plyer

    # Eliminamos todos los pasos manuales de configuración de Java, SDK, NDK, Docker pull,
    # y las modificaciones con 'sed'.
    # La acción 'ArtemSBulgakov/buildozer-action' se encarga de todo eso.

    - name: Clean .buildozer directory (precautionary)
      run: |
        rm -rf .buildozer
        echo ".buildozer directory eliminado para asegurar un inicio limpio."

    - name: Create minimal buildozer.spec file # ¡NUEVO PASO CLAVE!
      run: |
        echo "[app]" > buildozer.spec
        echo "title = My App" >> buildozer.spec
        echo "package.name = myapp" >> buildozer.spec
        echo "package.domain = org.test" >> buildozer.spec
        echo "" >> buildozer.spec
        echo "[buildozer]" >> buildozer.spec
        echo "warn_on_root = 1" >> buildozer.spec
        echo "Minimal buildozer.spec created."

    - name: Build with Buildozer Action # Usamos la acción dedicada con variables de entorno
      uses: ArtemSBulgakov/buildozer-action@v1
      with:
        command: buildozer android debug # El comando que Buildozer ejecutará
      env: # Aquí pasamos las configuraciones del buildozer.spec como variables de entorno
        APP_TITLE: JoiApp
        APP_PACKAGE_NAME: joi
        APP_PACKAGE_DOMAIN: org.joi
        ANDROID_API: 33
        ANDROID_MINAPI: 24
        # Requisitos: la acción Buildozer ya incluye python3 y kivy.
        # Solo listamos los requisitos adicionales de tu proyecto.
        APP_REQUIREMENTS: pyjnius,firebase-admin,google-generativeai,requests,pytz,plyer
        ANDROID_NDK: 25b
        ANDROID_ARCHS: arm64-v8a,armeabi-v7a
        APP_LOG_LEVEL: 2
        ANDROID_ACCEPT_SDK_LICENSE: True # Aceptar licencias automáticamente
        ANDROID_BUILD_TOOLS: 33.0.0 # Forzar la versión 33.0.0 de las herramientas de compilación

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: joi-android-apk
        path: bin/*.apk # Sube el archivo .apk generado por Buildozer
